{"version":3,"sources":["components/Form.js","components/Result.js","components/App.js","index.js"],"names":["Form","props","react_default","a","createElement","className","time","type","onChange","change","value","placeholder","date","Result","_props$data","data","city","temp","sunset","sunrise","wind","pressure","error","cityNew","slice","toUpperCase","sunriseTime","Date","toLocaleTimeString","sunsetTime","content","length","concat","APIkey","App","state","handleChange","e","_this","setState","target","componentDidUpdate","propsState","prevState","API","fetch","then","response","ok","Error","json","toLocaleDateString","main","sys","speed","catch","console","log","src_components_Form","this","src_components_Result","Component","ReactDOM","render","src_components_App","document","getElementById"],"mappings":"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","file":"static/js/main.f248bdc5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Form.css\";\r\n\r\nconst Form = props => (\r\n  <div className=\"f-form\">\r\n    <div className=\"date\">{props.time}</div>\r\n    <form>\r\n      <input\r\n        className=\"f-input\"\r\n        type=\"text\"\r\n        onChange={props.change}\r\n        value={props.value}\r\n        placeholder=\"wpisz nazwę miasta\"\r\n      />\r\n    </form>\r\n    <div className=\"date\">{props.date}</div>\r\n  </div>\r\n);\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport \"./Result.css\";\r\n\r\n// ikona zachodu słońca : <i class=\"fas fa-sun\"></i>\r\n// ikona wschodu słońca: <i class=\"far fa-sun\"></i>\r\n// ikona wiatru: <i class=\"fas fa-wind\"></i>\r\n// ikona temperatury: <i class=\"fas fa-temperature-high\"></i>\r\n// ikona ciśnienia: <i class=\"fas fa-tachometer-alt\"></i>\r\n\r\nconst Result = props => {\r\n  const {\r\n    city,\r\n    temp,\r\n    sunset,\r\n    value,\r\n    sunrise,\r\n    wind,\r\n    pressure,\r\n    error\r\n  } = props.data;\r\n\r\n  // aby wyświetlane miasto zawsze zaczynało sie z dużej litery\r\n  const cityLetter = city.slice(0, 1).toUpperCase();\r\n  const cityNew = cityLetter + city.slice(1);\r\n\r\n  const sunriseTime = new Date(sunrise * 1000).toLocaleTimeString();\r\n  const sunsetTime = new Date(sunset * 1000).toLocaleTimeString();\r\n\r\n  let content = (\r\n    <div className=\"content\">\r\n      <p className=\"city\">\r\n        Miasto:\r\n        <strong> {cityNew}</strong>\r\n      </p>\r\n      <div className=\"values\">\r\n        <div className=\"t-w-p\">\r\n          <p>Temperatura</p>\r\n          <p>\r\n            <i className=\"fas fa-temperature-high\" />\r\n          </p>\r\n          <p>\r\n            <strong>{temp} &#176;C</strong>\r\n          </p>\r\n        </div>\r\n        <div className=\"t-w-p\">\r\n          <p>Wiatr</p>\r\n          <p>\r\n            <i className=\"fas fa-wind\" />\r\n          </p>\r\n          <span>\r\n            <strong>{wind} m/s</strong>\r\n          </span>\r\n        </div>\r\n        <div className=\"t-w-p\">\r\n          <p>Ciśnienie</p>\r\n          <p>\r\n            <i className=\"fas fa-tachometer-alt\" />\r\n          </p>\r\n          <span>\r\n            <strong>{pressure} hPa</strong>\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <div className=\"sun\">\r\n        <div className=\"sunrise\">\r\n          <p>\r\n            <i className=\"fas fa-sun\" />\r\n          </p>\r\n          <p>\r\n            Wschód słońca: <strong>{city.length > 0 && sunriseTime}</strong>\r\n          </p>\r\n        </div>\r\n        <div className=\"sunset\">\r\n          <p>\r\n            <i className=\"far fa-sun\" />\r\n          </p>\r\n          <p>\r\n            Zachód słońca: <strong>{city.length > 0 && sunsetTime}</strong>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"result\">\r\n      {error ? (\r\n        <div className=\"error\">\r\n          {value.length === 0\r\n            ? \"Wpisz nazwę miasta w wyszukiwarkę\"\r\n            : `Nie ma w bazie ${city}`}\r\n        </div>\r\n      ) : (\r\n        content\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Result;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport \"./Form.css\";\nimport \"./Result.css\";\nimport \"./Media.css\";\nimport Form from \"./Form\";\nimport Result from \"./Result\";\n\n// klucz API\nconst APIkey = \"01c9e6add6ba8bf0e588714832744cbc\";\n\nclass App extends Component {\n  state = {\n    value: \"\",\n    city: \"\",\n    date: \"\",\n    time: \"\",\n    temp: \"\",\n    sunrise: \"\",\n    sunset: \"\",\n    wind: \"\",\n    pressure: \"\",\n    error: false\n  };\n\n  handleChange = e => {\n    this.setState({\n      value: e.target.value\n    });\n  };\n\n  componentDidUpdate = (propsState, prevState) => {\n    if (this.state.value.length === 0) return;\n    if (prevState.value !== this.state.value) {\n      const API = `https://api.openweathermap.org/data/2.5/weather?q=${\n        this.state.value\n      }&APPID=${APIkey}&units=metric`;\n\n      fetch(API)\n        .then(response => {\n          if (response.ok) {\n            return response;\n          }\n          throw Error(\"Brak danych\");\n        })\n        .then(response => response.json())\n        .then(data => {\n          const date = new Date().toLocaleDateString();\n          const time = new Date().toLocaleTimeString();\n          this.setState(prevState => ({\n            city: prevState.value,\n            time: time,\n            date: date,\n            temp: data.main.temp,\n            sunrise: data.sys.sunrise,\n            sunset: data.sys.sunset,\n            wind: data.wind.speed,\n            pressure: data.main.pressure,\n            error: false\n          }));\n        })\n        .catch(error => {\n          console.log(error);\n          this.setState(prevState => ({\n            error: true,\n            city: prevState.value\n          }));\n        });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"wrap\">\n        <Form\n          value={this.state.value}\n          change={this.handleChange}\n          date={this.state.date}\n          time={this.state.time}\n        />\n        <Result data={this.state} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}